====================================================================================PART-4=============================================================================

Git diff Command: 
=================
git diff---> Is use to Compare the files in Version Control System.
eg:between WorkingDirectories and Staging areas 

WorkingDirectories---->Staging---->LocalRepo---->RemoteRepo

i)In this we are creating the Folder (SampleProject For Git) in C Drive in the Folder we are Right clicking and on that Selecting (Git Bash Here). 
ii)Then we are Typing Unix commad to create the .txt File on that (SampleProject For Git) Folder location.
$ vim index.txt --> press Enter.
In this Unix Terminal Press 'i' button to insert value.
In this now we are Inserting Animals.

Animals
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
index.txt [unix] (08:30 20/03/2022)                                                2,5 All
-- INSERT --

After inserting scentence press 'Esc' button and type last :wq! command, to force write to file even if it does not have return permission. 

Animals
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
index.txt [unix] (08:30 20/03/2022)                                                2,3 All
:wq!

iii)Then Unix Terminal will Appear On that we want to type some Sentence (for typing press 'i' Button(--Insert--) to type some Sentence, when you finished typing (press 'Esc'))
when we press Esc button the Cursor come to Where we See --Insert-- before typing.
iv)Then we want to save the file and exit from Unix terminal:
=============================================================
1.Press Esc button to go to the Command mode and ':' appears.
2.Type: w to save the file.
3.Type: wq to save and quit file.
4.Type: q! to  quit without saving.
5.Type: wq! to force write to file even if it does not have return permission.
6.Type: x to write and quit and this command is Short for :wq
7.Type: qa to quit all.

v)The file I have written is animal in index.txt, that was stored in Working Directory.

Working Directory          Staging              Local Repository
-------------           -------------           -------------- 
|  -------- |   add     |           |   commit  |            |
|  |animals||---------->|           |---------->|            |
|  -------- |           |           |           |            |
-------------           -------------           --------------          
vi)After Saving file from unix Terminal, then create local repo in the (SampleProject For Git) Folder location using 'git init' command.
$ git init
Initialized empty Git repository in C:/Sample Project For Git/.git/
 
vii)After the git Initialized empty Git repository in local repo, we have to Staging the file to next level by add the files using (git add .) this will add all the files in local repo.
$ git add .
warning: LF will be replaced by CRLF in index.txt.
The file will have its original line endings in your working directory

viii)After adding the file check the git status using Git command (git status):
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   index.txt

ix)After Staging the file is moved to Staging.

Working Directory          Staging              Local Repository
-------------           -------------           -------------- 
|  -------- |   add     | --------  |   commit  |            |
|  |animals||---------->| |animals| |---------->|            |
|  -------- |           | --------  |           |            |
-------------           -------------           -------------- 

x)After that again we are modifing/adding another (words like Birds) in index.txt file in unix Terminal.
$ vim index.txt --> press Enter.
In this Unix Terminal Press 'i' button to insert value.
In this now we are Inserting Birds.

Animals
Birds
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
index.txt [unix] (08:30 20/03/2022)                                                2,5 All
-- INSERT --

After inserting scentence press Esc button and type last :wq! command, to force write to file even if it does not have return permission. 

Animals
Birds
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
index.txt [unix] (08:30 20/03/2022)                                                2,3 All
:wq!

After change in file check the Git Status using git status command.
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   index.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.txt

Here Birds in Working Directory only not in Staging Area.

Requirement1:
=============
To see difference in Files Content Between Working Directory Staging Area.

We have to see the Difference Between Working Directory Staging Area using---> (git diff index.txt).

$ git diff index.txt

warning: LF will be replaced by CRLF in index.txt.
The file will have its original line endings in your working directory
diff --git a/index.txt b/index.txt
index fcb5845..1f16f36 100644
--- a/index.txt
+++ b/index.txt
@@ -1 +1,2 @@
-animals
+Animals
+Birds

Lets take Some Commands from Above:
===================================
diff --git a/index.txt b/index.txt
index fcb5845..1f16f36 100644
--- a/index.txt
+++ b/index.txt
@@ -1 +1,2 @@
-animals
+Animals
+Birds

In Git Staging is --->(Source Location).
a/index.txt --> representing Source (Staging Area)

Working Directory is -->(Target or Destination Location).
b/index.txt --> representing Target or Destination (Working Directory)

fcb5845---> Hash of file content from Source/Staging.
1f16f36---> Hash of file content from Destination/WorkSpace or WorkingDirectory.

100644---> Git file Mode. 
           
100---> It Represents type of the files.(In our case we are using .txt file so 100 is for that) Some Hash codes are there for some type of files
644---> Representing File Permission.(Git follows Linux Commands) Here 6-read write, 4-read, 4-read. 644-> rw-r-r
4->read
2->write
1->execute

And we have Three type of users in Linux--> Group,Owners,Users 

6->4+2=6 -> that means read and write permission for Groups(it means 4->Read 2->Write = Read + Write = Owners)

rw-r-r-->(middle r is Groups, last r is Others Both the middle and last r-r is other) So groups and others are having Read permission.
Both rw--> is owners, So owner is representing Read Write permission.

--- a/index.txt --> Source file (--- is Missing) missing some lines (Staging)
Here in below diagram Represents Working Directory have Birds but in Staging area Birds is missing so that is Represented in Above line.

Working Directory          Staging              Local Repository
-------------           -------------           -------------- 
|  |animals||   add     | --------  |   commit  |            |
|  |Animals||---------->| |Animal|  |---------->|            |
|  |Birds  ||           | |      |  |           |            |            
|  ---------|           | --------  |           |            |
-------------           -------------           --------------

+++ b/index.txt ---> New lines added in Destination file (working directory).
In Above Diagram Represents After adding Animals in the Staging area But then also it have some Words called Birds in Working Directory, That is reprenting (++++). 

 animals--->  If any line Prefixed with Space means it is UnChanged.
+Animals--->  If any line Prefixed with + means it is added in Destination Copy.
-animals--->  If any line Prefixed with - means it is removed from Destination Copy.

Requirements2:
==============
To see difference in Files Content Between Working Directory to last commit.

$ git commit -m "first commit file contains 1 line"
[master (root-commit) c44f391] first commit file contains 1 line
 1 file changed, 1 insertion(+)
 create mode 100644 index.txt

Working Directory          Staging              Local Repository
-------------           -------------           -------------- 
|  |animals||   add     | --------- |   commit  | ---------  |
|  |Animals||---------->| |Animals| |---------->| |Animals|  |
|  |Birds  ||           | |       | |           | |       |  |            
|  ---------|           | --------- |           | ---------  |
-------------           -------------           --------------

Requirements3:
==============
To see difference in Files Content Between Working Directory to Local Repo.

$ vim index.txt
Animals
Birds
Fishes
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
index.txt [unix] (00:21 21/03/2022)                                      3,6 All
-- INSERT --

Animals
Birds
Fishes
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
index.txt [unix] (00:21 21/03/2022)                                      3,5 All
:wq!

Working Directory          Staging              Local Repository
-------------           -------------           -------------- 
|  |animals||   add     | --------- |   commit  | ---------  |
|  |Animals||---------->| |Animals| |---------->| |Animals|  |
|  |Birds  ||           | |       | |           | |       |  |            
|  |Fishes ||           | --------- |           | ---------  |
-------------           -------------           --------------

Latest commit or Last Commit refered HEAD Keyword.
--------------------------------------------------

$ git diff HEAD index.txt
warning: LF will be replaced by CRLF in index.txt.
The file will have its original line endings in your working directory
diff --git a/index.txt b/index.txt
index fcb5845..062f117 100644
--- a/index.txt
+++ b/index.txt
@@ -1 +1,3 @@
-animals
+Animals
+Birds
+Fishes

Requirements4:
==============
To see difference in Files Content Between Staged Copy to (Local Repo) Last Commit.

$ git add .
warning: LF will be replaced by CRLF in index.txt.
The file will have its original line endings in your working directory

To Check Last commit to Staged Copy the Git Commad is:
 
git diff --staged HEAD index.txt

diff --git a/index.txt b/index.txt
index fcb5845..062f117 100644
--- a/index.txt
+++ b/index.txt
@@ -1 +1,3 @@
-animals
+Animals
+Birds
+Fishes

Working Directory          Staging              Local Repository
-------------           -------------           -------------- 
|  |animals||   add     | --------  |   commit  | ---------  |
|  |Animals||---------->| |Animal|  |---------->| |Animals|  |
|  |Birds  ||           | |Birds |  |           | |       |  |            
|  |Fishes ||           | |Fishes|  |           | |       |  |
-------------           -------------           --------------

Requirements5:
==============
To see difference in Files Content Between Specific Commit to Working Directory.

$ git commit -m "Second commit file contains 3 line"
[master 296cfca] Second commit file contains 3 line
 1 file changed, 3 insertions(+), 1 deletion(-)

Working Directory          Staging              Local Repository
-------------           -------------           -------------- 
|  |animals||   add     | --------  |   commit  | ---------  |
|  |Animals||---------->| |Animal|  |---------->| |Animals|  |
|  |Birds  ||           | |Birds |  |           | |Birds  |  |            
|  |Fishes ||           | |Fishes|  |           | |Fishes |  |
-------------           -------------           --------------

Now I have to compare the Last commit to Previous Commit.

Now I also add Trees to the Working Directory.
$ vim index.txt

Animals
Birds
Fishes
Trees
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
index.txt [unix] (01:03 21/03/2022)                                      4,5 All
-- INSERT --


Animals
Birds
Fishes
Trees
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
index.txt[+] [unix] (00:29 21/03/2022)                                   4,5 All
:wq!

Working Directory          Staging              Local Repository
-------------           -------------           -------------- 
|  |animals||   add     | --------  |   commit  | ---------  |
|  |Animals||---------->| |Animal|  |---------->| |Animals|  | Second commit file contains 3 line
|  |Birds  ||           | |Birds |  |           | |Birds  |  |            
|  |Fishes ||           | |Fishes|  |           | |Fishes |  |
|  |Trees  ||           | |      |  |           | |       |  | 
-------------           -------------           | ---------  |
                                                | ---------  |
                                                | |Animals|  |  
                                                | |Birds  |  | First commit file contains 1 line
                                                | |       |  |
                                                | ---------  |
                                                --------------   

To Compare First commit to Second commit, Git commands are to execute is :

$ git log --oneline
296cfca (HEAD -> master) Second commit file contains 3 line

c44f391 first commit file contains 1 line

Git Commit ID are Generated by using: git log --oneline
Git Latest commit (HEAD -> master) ID ---> 296cfca
Git old commit ID ---> c44f391

Now we want to compare the commit by commit ID.

(comparing first commit ID Using git diff c44f391 index.txt)

git diff c44f391 index.txt (This will compare File in Working Directory and Local Repo, First commit file contains 1 line)
warning: LF will be replaced by CRLF in index.txt.
The file will have its original line endings in your working directory
diff --git a/index.txt b/index.txt
index fcb5845..309020a 100644
--- a/index.txt
+++ b/index.txt
@@ -1 +1,4 @@
-animals
+Animals
+Birds
+Fishes
+Trees

Requirements6:
==============
To see difference in Files Content Between Specific Commit to Staging Area.

git diff --staged c44f391

diff --git a/index.txt b/index.txt
index fcb5845..062f117 100644
--- a/index.txt
+++ b/index.txt
@@ -1 +1,3 @@
-animals
+Animals
+Birds
+Fishes
 
Working Directory          Staging              Local Repository
-------------           -------------           -------------- 
|  |animals||   add     | --------  |   commit  | ---------  |
|  |Animals||---------->| |Animal|  |---------->| |Animals|  | Second commit file contains 3 line
|  |Birds  ||           | |Birds |  |           | |Birds  |  |            
|  |Fishes ||           | |Fishes|  |           | |Fishes |  |
|  |Trees  ||           | |      |  |           | |       |  | 
-------------           -------------           | ---------  |
                                                | ---------  |
                                                | |animals|  |  
                                                | |       |  | First commit file contains 1 line
                                                | |       |  |
                                                | ---------  |
                                                --------------   

Requirements7:
==============
To see difference in Files Content Between 2 Specificed Commit.

comparing by the Commit ID 

git diff 296cfca c44f391 index.txt

diff --git a/index.txt b/index.txt
index 062f117..fcb5845 100644
--- a/index.txt
+++ b/index.txt
@@ -1,3 +1 @@
-Animals
-Birds
-Fishes
+animals

Working Directory          Staging              Local Repository
-------------           -------------           -------------- 
|  |animals||   add     | --------  |   commit  | ---------  |
|  |Animals||---------->| |Animal|  |---------->| |Animals|  | Second commit file contains 3 line
|  |Birds  ||           | |Birds |  |           | |Birds  |  |            
|  |Fishes ||           | |Fishes|  |           | |Fishes |  |
|  |Trees  ||           | |      |  |           | |       |  | 
-------------           -------------           | ---------  |
                                                | ---------  |
                                                | |animals|  |  
                                                | |       |  | First commit file contains 1 line  
                                                | |       |  |
                                                | ---------  |
                                                --------------   

Requirements8:
==============
To see difference in Content Between 2 Branches.

If we have some Branch means like -->Master Branch
                                  -->Test Branch

Git Command to compare 2 Branches: git diff master test

(It Shows all differences between master branch and test branch)    

Requirements9:
==============
To see difference in Content Between Local and Remote Repositories.

Git Command to compare Local and Remote Repositories: git diff master origin/master
